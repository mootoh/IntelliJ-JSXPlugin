{
    parserClass="net.mootoh.intellij.JSXPlugin.parser.JSXParser"
    parserUtilClass="net.mootoh.intellij.JSXPlugin.parser.JSXParserUtil"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="JSX"
    psiImplClassSuffix="Impl"
    psiPackage="net.mootoh.intellij.JSXPlugin.psi"
    psiImplPackage="net.mootoh.intellij.JSXPlugin.psi.impl"

    elementTypeHolderClass="net.mootoh.intellij.JSXPlugin.psi.JSXTypes"
    elementTypeClass="net.mootoh.intellij.JSXPlugin.psi.JSXElementType"
    tokenTypeClass="net.mootoh.intellij.JSXPlugin.psi.JSXTokenType"

    tokens = [
        kclass='class'
        kmixin='mixin'
        pLeft='{'
        pRight='}'

        lnumber='regexp:\d+(\.\d*)?'
        lidentifier='regexp:[A-Za-z_][a-zA-Z0-9_]+'
        lstring='regexp:[a-zA-Z\._]+'
//        lidentifier='regexp:[a-zA-Z0-9_]+'

//        id="regexp:\w+"
//        string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\\"|\\\'|\\)*\")"
        cline_comment="regexp://.*"
        cblock_comment="regexp:/\*(.|\n)*\*/"
    ]
}

jsxFile ::= importStatementList typeStatement *

importStatementList ::= importStatement *
importStatement ::= 'import' quotedStringLiteral ';'  {pin=1}

quotedStringLiteral ::= '"' lstring '"'

typeStatement ::= ktype classDefinition block ';'  {pin=2}

classDefinition ::= lidentifier {
  pin=4
  methods=[
    resolveReference
  ]
  implements="net.mootoh.intellij.JSXPlugin.psi.JSXClass"
}

block ::= '{' blockStatement* '}'
blockStatement ::= lidentifier {pin=3}

ktype ::= kclass | kmixin
